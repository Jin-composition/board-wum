[{"C:\\Users\\good\\Desktop\\아카이브\\src\\index.js":"1","C:\\Users\\good\\Desktop\\아카이브\\src\\reportWebVitals.js":"2","C:\\Users\\good\\Desktop\\아카이브\\src\\App.js":"3","C:\\Users\\good\\Desktop\\아카이브\\src\\pages\\List.js":"4","C:\\Users\\good\\Desktop\\아카이브\\src\\pages\\Write.js":"5","C:\\Users\\good\\Desktop\\아카이브\\src\\pages\\Detail.js":"6","C:\\Users\\good\\Desktop\\아카이브\\src\\api\\Write.api.js":"7","C:\\Users\\good\\Desktop\\아카이브\\src\\pages\\pagination\\Pagination.js":"8","C:\\Users\\good\\Desktop\\아카이브\\src\\pages\\comment\\Comment.js":"9","C:\\Users\\good\\Desktop\\아카이브\\src\\pages\\comment\\Comment.styles.js":"10"},{"size":579,"mtime":1650270586000,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":1650001995000,"results":"13","hashOfConfig":"12"},{"size":979,"mtime":1653281553000,"results":"14","hashOfConfig":"12"},{"size":5402,"mtime":1653284437000,"results":"15","hashOfConfig":"12"},{"size":5317,"mtime":1655081040500,"results":"16","hashOfConfig":"12"},{"size":2221,"mtime":1653355862000,"results":"17","hashOfConfig":"12"},{"size":161,"mtime":1653355857000,"results":"18","hashOfConfig":"12"},{"size":1335,"mtime":1652665339000,"results":"19","hashOfConfig":"12"},{"size":14158,"mtime":1653958902000,"results":"20","hashOfConfig":"12"},{"size":3014,"mtime":1653895167000,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","suppressedMessages":"24","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1xlvi3u",{"filePath":"25","messages":"26","suppressedMessages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"28","messages":"29","suppressedMessages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","suppressedMessages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37"},{"filePath":"38","messages":"39","suppressedMessages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\good\\Desktop\\아카이브\\src\\index.js",[],[],"C:\\Users\\good\\Desktop\\아카이브\\src\\reportWebVitals.js",[],[],"C:\\Users\\good\\Desktop\\아카이브\\src\\App.js",[],[],"C:\\Users\\good\\Desktop\\아카이브\\src\\pages\\List.js",["53"],[],"C:\\Users\\good\\Desktop\\아카이브\\src\\pages\\Write.js",["54","55"],[],"import { logDOM } from \"@testing-library/react\";\nimport axios from \"axios\";\nimport React, { useEffect, useState, useRef } from \"react\";\nimport { useLocation, useNavigate } from \"react-router\";\n\nimport styles from \"../css/Write.module.css\";\n\nfunction Write({ ip }) {\n  console.log(ip);\n  let date = new Date();\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  month = month < 10 ? \"0\" + month.toString() : month.toString();\n  let day = `0` + date.getDate();\n  const today = `${year}-${month}-${day}`;\n\n  const [title, setTitle] = useState(\"\");\n  const [comment, setComment] = useState(\"\");\n\n  const [edit, setEdit] = useState(false);\n\n  const navigate = useNavigate();\n  const { state } = useLocation();\n\n  // 파일 첨부하기\n  const fileRef = useRef();\n  const [myImages, setMyImages] = useState([]);\n\n  useEffect(() => {\n    if (state.isEdit === true) {\n      setEdit(true);\n      ForUpdate(state.idx);\n    } else {\n      setEdit(false);\n    }\n  }, [state]);\n\n  // 수정페이지 data 불러오기 //\n  async function ForUpdate(idx) {\n    console.log(idx, \"번호\");\n    const param = new URLSearchParams();\n\n    param.append(\"board_idx\", idx);\n    await axios.post(\"http://localhost:8000/data\", param).then((res) => {\n      console.log(res, \"결과_수정데이터\");\n\n      setTitle(res.data[0].title);\n      setComment(res.data[0].comment);\n    });\n  }\n  // 수정하기 //\n  async function UpdateData() {\n    if (state) window.confirm(\"정말로 수정하시겠습니까?\");\n    {\n      const idx = state.idx;\n      await axios\n        .post(\"http://localhost:8000/update\", {\n          title: title,\n          comment: comment,\n          update_date: today,\n          board_idx: idx,\n        })\n        .then((res) => {\n          console.log(res, \"res\");\n\n          alert(\"수정 완료\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n    }\n  }\n\n  function ChangeTitle(e) {\n    setTitle(e.target.value);\n  }\n  function ChangeComment(e) {\n    setComment(e.target.value);\n  }\n  function ChangeFile(e) {\n    const selectImage = e.target.files;\n    const ImageList = [...myImages];\n\n    for (let i = 0; i < ImageList.length; i++) {\n      const imageUrl = URL.createObjectURL(selectImage[i]);\n      ImageList.push(imageUrl);\n    }\n    setMyImages(ImageList);\n\n    // if (!file) return;\n\n    // const fileReader = new FileReader();\n    // fileReader.readAsDataURL(file);\n    // console.log(file);\n\n    // fileReader.onLoad = (e) => {\n    //   console.log(e.target.result, \"url\");\n    //   setImageUrl(e.target.result);\n    //   console.log(imageUrl);\n    // };\n    // 왜 안되는지 모르겠네.....\n    // const imageUrl = URL.createObjectURL(file);\n    // console.log(imageUrl, \"??\");\n    // setImageUrl(imageUrl);\n  }\n\n  // 저장하기 //\n  async function SaveData() {\n    const formData = new FormData();\n    // formData.append(\"files\", imageUrl);\n    if (window.confirm(\"정말로 작성하시겠습니까?\")) {\n      await axios\n        .post(\"http://localhost:8000/write\", {\n          title: title,\n          comment: comment,\n          reg_rdate: today,\n          ip_address: ip,\n          data: formData,\n        })\n        .then((res) => {\n          console.log(res, \"res\");\n\n          alert(\"등록완료\");\n        })\n        .catch((err) => {\n          console.log(err);\n        });\n      setTitle(\"\");\n      setComment(\"\");\n      navigate(\"/\");\n    }\n  }\n\n  function MoveToList() {\n    navigate(\"/\");\n  }\n\n  return (\n    <div className={styles.wrapper}>\n      <div className={styles.page_name}>\n        {edit === true ? \"Update 페이지\" : \"Write 페이지\"}\n      </div>\n      <div className={styles.board}>\n        <div className={styles.input_list}>\n          <div className={styles.title_input}>\n            <label className={styles.label}>제목</label>\n            <input\n              id=\"title\"\n              className={styles.title}\n              value={title}\n              onChange={ChangeTitle}\n            ></input>\n          </div>\n          <div className={styles.comment_input}>\n            <label className={styles.label}>내용</label>\n            <textarea\n              id=\"comment\"\n              className={styles.comment}\n              value={comment}\n              onChange={ChangeComment}\n            ></textarea>\n          </div>\n          <div className={styles.uploadFile}>\n            <input\n              type=\"file\"\n              ref={fileRef}\n              onChange={ChangeFile}\n              multiple=\"multiple\"\n            />\n            {myImages.map((image) => (\n              <img\n                // src={}\n                style={{\n                  width: \"200px\",\n                  height: \"200px\",\n                }}\n              />\n            ))}\n          </div>\n        </div>\n        <div className={styles.button}>\n          {edit === true ? (\n            <button className={styles.submit_btn} onClick={UpdateData}>\n              수정하기\n            </button>\n          ) : (\n            <button className={styles.submit_btn} onClick={SaveData}>\n              저장하기\n            </button>\n          )}\n          <button className={styles.list_btn} onClick={MoveToList}>\n            목록으로\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default Write;\n","C:\\Users\\good\\Desktop\\아카이브\\src\\pages\\Detail.js",["56"],[],"C:\\Users\\good\\Desktop\\아카이브\\src\\api\\Write.api.js",[],[],"C:\\Users\\good\\Desktop\\아카이브\\src\\pages\\pagination\\Pagination.js",["57"],[],"C:\\Users\\good\\Desktop\\아카이브\\src\\pages\\comment\\Comment.js",["58","59"],[],"C:\\Users\\good\\Desktop\\아카이브\\src\\pages\\comment\\Comment.styles.js",[],[],{"ruleId":"60","severity":1,"message":"61","line":73,"column":20,"nodeType":"62","messageId":"63","endLine":73,"endColumn":31},{"ruleId":"60","severity":1,"message":"64","line":1,"column":10,"nodeType":"62","messageId":"63","endLine":1,"endColumn":16},{"ruleId":"65","severity":1,"message":"66","line":171,"column":15,"nodeType":"67","endLine":177,"endColumn":17},{"ruleId":"68","severity":1,"message":"69","line":69,"column":61,"nodeType":"70","messageId":"71","endLine":69,"endColumn":63},{"ruleId":"60","severity":1,"message":"72","line":3,"column":10,"nodeType":"62","messageId":"63","endLine":3,"endColumn":18},{"ruleId":"60","severity":1,"message":"61","line":64,"column":20,"nodeType":"62","messageId":"63","endLine":64,"endColumn":31},{"ruleId":"73","severity":1,"message":"74","line":132,"column":6,"nodeType":"75","endLine":132,"endColumn":8,"suggestions":"76"},"no-unused-vars","'setPageSize' is assigned a value but never used.","Identifier","unusedVar","'logDOM' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'useState' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'id'. Either include it or remove the dependency array.","ArrayExpression",["77"],{"desc":"78","fix":"79"},"Update the dependencies array to be: [id]",{"range":"80","text":"81"},[3340,3342],"[id]"]