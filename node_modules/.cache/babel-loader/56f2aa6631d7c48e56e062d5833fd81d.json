{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\good\\\\Desktop\\\\\\uC544\\uCE74\\uC774\\uBE0C\\\\src\\\\pages\\\\comment\\\\Comment.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Pagination from \"../pagination/Pagination\";\nimport { Comment, CommentTitle, CommentLength, CommentName, CommentWrite, CommentInput, CommentSubmit, ReCommentWrite, ReCommentInput, SubmitButtons, ReCommentSubmit, ReCommentCancel, ListWrapper, ListWrap, CommentList, CommentContext, CommentDate, ReCommentButton, CommentButtonWrapper, UpdateButton, DeleteButton, ReCommentList, ReCommentWrap, ReCommentContext, RecommentUpdateInput, ReCommentDate } from \"./Comment.styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CommentPage(_ref) {\n  _s();\n\n  let {\n    id,\n    ip\n  } = _ref;\n  let date = new Date();\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  month = month < 10 ? \"0\" + month.toString() : month.toString();\n  let day = date.getDate();\n  day = day < 10 ? \"0\" + month.toString() : day.toString();\n  let hours = (\"0\" + date.getHours()).slice(-2);\n  let minutes = (\"0\" + date.getMinutes()).slice(-2);\n  const today = `${year}-${month}-${day} ${hours}.${minutes}`;\n  const [comment, setComment] = useState(\"\");\n  const [recomment, setReComment] = useState(\"\");\n  const [commentList, setCommentList] = useState([]);\n  const [recommentList, setReCommentList] = useState([]);\n  const [comment_idx, setComment_idx] = useState([]);\n  const [isOpen, setIsOpen] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n\n  function ChangeComment(e) {\n    setComment(e.target.value);\n  }\n\n  function ChangeReComment(e) {\n    setReComment(e.target.value);\n    console.log(recomment);\n  } // 페이지네이션\n\n\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const itemsCounts = commentList.length;\n  const lastPage = Math.ceil(itemsCounts / pageSize);\n  const offset = (currentPage - 1) * pageSize;\n\n  function onPageChange(num) {\n    setCurrentPage(num);\n    console.log(num);\n  }\n\n  function prevPage(e) {\n    if (currentPage === 1) return;\n    setCurrentPage(prev => prev - 1);\n    console.log(currentPage, \"prev\");\n  }\n\n  function nextPage(e) {\n    if (currentPage >= lastPage) return;\n    setCurrentPage(prev => prev + 1);\n    console.log(currentPage, \"next\");\n  } // 댓글 작성하기\n\n\n  async function SubmitComment(idx) {\n    console.log(idx);\n    isOpen === false ? await axios.post(\"http://localhost:8000/comment\", {\n      context: comment,\n      reg_rdate: today,\n      board_idx: id,\n      ip_address: ip\n    }).then(res => {\n      console.log(res, \"res\");\n      CommentListing(id);\n    }).catch(err => {\n      console.log(err);\n    }) : await axios.post(\"http://localhost:8000/recomment\", {\n      context: recomment,\n      reg_rdate: today,\n      board_idx: id,\n      bundle_id: idx,\n      ip_address: ip\n    }).then(res => {\n      console.log(res, \"res\");\n      CommentListing(id);\n      setIsOpen(false);\n    }).catch(err => {\n      console.log(err);\n    });\n  }\n\n  function CancelComment() {\n    setIsOpen(false);\n    setIsEdit(false);\n    setComment(\"\");\n    setReComment(\"\");\n  } // 댓글 불러오기\n\n\n  useEffect(() => {\n    CommentListing(id);\n  }, []);\n\n  async function CommentListing(id) {\n    // console.log(id, \"id\");\n    const param = new URLSearchParams();\n    param.append(\"board_idx\", id);\n    await axios.post(\"/comment/list\", param).then(res => {\n      // console.log(res.data, \"res_list\");\n      setCommentList(res.data.filter(el => el.class === 0));\n      setReCommentList(res.data.filter(el => el.class !== 0));\n    }).catch(err => {\n      console.log(err);\n    });\n    setComment(\"\");\n    setReComment(\"\");\n  } // 수정 댓글 불러오기\n\n\n  async function CommentUpdate(idx) {\n    console.log(idx);\n    setIsEdit(true);\n    OpenReply(idx);\n    console.log(idx);\n    const param = new URLSearchParams();\n    param.append(\"comment_index\", idx);\n    await axios.post(\"http://localhost:8000/comment/data\", param).then(res => {\n      console.log(res, \"결과_댓글\");\n      setComment(res.data[0].context);\n    });\n  }\n\n  function OpenReply(idx) {\n    setComment_idx(idx);\n    setIsOpen(true);\n  } // 댓글 수정하기\n\n\n  async function UpdateComment(idx) {\n    await axios.post(\"http://localhost:8000/update/comment\", {\n      context: comment,\n      update_date: today,\n      comment_index: idx\n    }).then(res => {\n      console.log(res, \"res_update\");\n      alert(\"수정 완료\");\n    }).catch(err => {\n      console.log(err);\n    });\n    setIsOpen(false);\n    setIsEdit(false);\n    CommentListing(id);\n  } // 댓글 삭제하기\n\n\n  async function CommentDelete(idx) {\n    console.log(idx);\n    await axios.post(\"http://localhost:8000/delete/comment\", {\n      comment_index: idx,\n      deleted: \"deleted\"\n    }).then(res => {\n      console.log(res);\n      alert(\"삭제 완료\");\n    }).catch(err => {\n      console.log(err);\n    });\n    CommentListing(id);\n  } // 수정 대댓글 불러오기\n\n\n  async function UpdateRecomment(idx) {\n    console.log(idx);\n    setIsEdit(true);\n    OpenReply(idx);\n  } // 대댓글 수정하기\n\n\n  async function RecommentUpdate(idx) {\n    console.log(idx);\n    await axios.post(\"http://localhost:8000/update/recomment\", {\n      context: recomment,\n      update_date: today,\n      comment_index: idx\n    }).then(res => {\n      console.log(res);\n      alert(\"수정 완료\");\n    }).catch(err => {\n      console.log(err);\n    });\n    setIsOpen(false);\n    setIsEdit(false);\n    CommentListing(id);\n  } //대댓글 삭제하기\n\n\n  async function RecommentDelete(idx) {\n    console.log(idx);\n    await axios.post(\"http://localhost:8000/delete/recomment\", {\n      comment_index: idx,\n      deleted: \"deleted\"\n    }).then(res => {\n      console.log(res);\n      alert(\"삭제 완료\");\n    }).catch(err => {\n      console.log(err);\n    });\n    CommentListing(id);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Comment, {\n    children: ip && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(CommentTitle, {\n        children: /*#__PURE__*/_jsxDEV(CommentLength, {\n          children: [/*#__PURE__*/_jsxDEV(CommentName, {\n            children: \"\\uB313\\uAE00\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 268,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: commentList.filter(el => el.deleted === null).length\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 269,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 267,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 266,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommentName, {\n        children: \"\\uB313\\uAE00 \\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 274,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(CommentWrite, {\n        children: [/*#__PURE__*/_jsxDEV(CommentInput, {\n          value: isOpen === true ? \"\" : comment,\n          onChange: isOpen === true ? null : ChangeComment\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(CommentSubmit, {\n          onClick: SubmitComment,\n          children: \"\\uC791\\uC131\\uD558\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 280,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 275,\n        columnNumber: 11\n      }, this), commentList.slice(offset, offset + pageSize).map((el, index) => /*#__PURE__*/_jsxDEV(ListWrapper, {\n        children: [/*#__PURE__*/_jsxDEV(ListWrap, {\n          children: [/*#__PURE__*/_jsxDEV(CommentList, {\n            children: [/*#__PURE__*/_jsxDEV(CommentContext, {\n              value: comment,\n              style: {\n                color: el.deleted === \"deleted\" ? \"gray\" : \"black\"\n              },\n              children: el.deleted === null ? el.context : \"삭제된 댓글입니다\"\n            }, el.comment_index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 286,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(CommentDate, {\n              children: el.reg_rdate.slice(0, 10) + \".\" + el.reg_rdate.slice(11, 16)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 295,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(ReCommentButton, {\n              onClick: () => OpenReply(el.comment_index, index),\n              children: \"\\uB313\\uAE00 \\uB2EC\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 301,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 17\n          }, this), el.deleted !== \"deleted\" && el.ip_address === ip && /*#__PURE__*/_jsxDEV(CommentButtonWrapper, {\n            children: [/*#__PURE__*/_jsxDEV(UpdateButton, {\n              disabled: el.distinguish === 0 ? null : \"disabled\",\n              onClick: () => CommentUpdate(el.comment_index),\n              children: \"\\uC218\\uC815\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 309,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n              onClick: () => CommentDelete(el.comment_index),\n              children: \"\\uC0AD\\uC81C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 316,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 308,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: recommentList.map((recomment, index) => /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: el.comment_index === recomment.bundle_id ? /*#__PURE__*/_jsxDEV(ReCommentList, {\n              children: isOpen === true && comment_idx === recomment.comment_index ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(ReCommentWrite, {\n                  children: [/*#__PURE__*/_jsxDEV(RecommentUpdateInput, {\n                    onChange: ChangeReComment,\n                    defaultValue: recomment.context\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 333,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(SubmitButtons, {\n                    children: [/*#__PURE__*/_jsxDEV(ReCommentSubmit, {\n                      onClick: () => RecommentUpdate(recomment.comment_index),\n                      children: \"\\uC218\\uC815\\uD558\\uAE30\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 339,\n                      columnNumber: 33\n                    }, this), /*#__PURE__*/_jsxDEV(ReCommentCancel, {\n                      onClick: () => CancelComment(recomment.comment_index),\n                      children: \"\\uCDE8\\uC18C\\uD558\\uAE30\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 346,\n                      columnNumber: 33\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 338,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 332,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(ReCommentWrap, {\n                  children: [/*#__PURE__*/_jsxDEV(ReCommentContext, {\n                    style: {\n                      color: recomment.deleted === \"deleted\" ? \"gray\" : \"black\"\n                    },\n                    children: recomment.deleted === null ? \"⌙ \" + recomment.context : \"삭제된 댓글입니다\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 359,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(ReCommentDate, {\n                    children: recomment.reg_rdate.slice(0, 10) + \".\" + recomment.reg_rdate.slice(11, 16)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 371,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 358,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(CommentButtonWrapper, {\n                  children: [/*#__PURE__*/_jsxDEV(UpdateButton, {\n                    disabled: recomment.distinguish === 0 ? null : \"disabled\",\n                    onClick: () => UpdateRecomment(recomment.comment_index),\n                    children: \"\\uC218\\uC815\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 378,\n                    columnNumber: 31\n                  }, this), /*#__PURE__*/_jsxDEV(DeleteButton, {\n                    onClick: () => RecommentDelete(recomment.comment_index),\n                    children: \"\\uC0AD\\uC81C\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 391,\n                    columnNumber: 31\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 377,\n                  columnNumber: 29\n                }, this)]\n              }, void 0, true)\n            }, recomment.bundle_id, false, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 23\n            }, this) : null\n          }, void 0, false))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 324,\n          columnNumber: 15\n        }, this), isOpen === true && comment_idx === el.comment_index && /*#__PURE__*/_jsxDEV(ReCommentWrite, {\n          children: [/*#__PURE__*/_jsxDEV(ReCommentInput, {\n            onChange: isEdit === true ? ChangeComment : ChangeReComment,\n            value: isEdit === true ? comment : recomment\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 408,\n            columnNumber: 19\n          }, this), isEdit === true ? /*#__PURE__*/_jsxDEV(SubmitButtons, {\n            children: [/*#__PURE__*/_jsxDEV(ReCommentSubmit, {\n              onClick: () => UpdateComment(el.comment_index),\n              children: \"\\uC218\\uC815\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 414,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(ReCommentCancel, {\n              onClick: () => CancelComment(el.comment_index),\n              children: \"\\uCDE8\\uC18C\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 419,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 413,\n            columnNumber: 21\n          }, this) : /*#__PURE__*/_jsxDEV(SubmitButtons, {\n            children: [/*#__PURE__*/_jsxDEV(ReCommentSubmit, {\n              onClick: () => SubmitComment(el.comment_index),\n              children: \"\\uC800\\uC7A5\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 427,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(ReCommentCancel, {\n              onClick: () => CancelComment(el.comment_index),\n              children: \"\\uCDE8\\uC18C\\uD558\\uAE30\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 432,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 426,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 407,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 13\n      }, this)), /*#__PURE__*/_jsxDEV(Pagination, {\n        itemsCount: itemsCounts,\n        onPageChange: onPageChange,\n        pageSize: pageSize,\n        currentPage: currentPage,\n        setCurrentPage: setCurrentPage,\n        prevPage: prevPage,\n        nextPage: nextPage,\n        lastPage: lastPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 443,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 263,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CommentPage, \"scpscudvzxa8vlEzraPKiA7VuWU=\");\n\n_c = CommentPage;\nexport default CommentPage;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentPage\");","map":{"version":3,"sources":["C:/Users/good/Desktop/아카이브/src/pages/comment/Comment.js"],"names":["React","useEffect","useState","axios","Pagination","Comment","CommentTitle","CommentLength","CommentName","CommentWrite","CommentInput","CommentSubmit","ReCommentWrite","ReCommentInput","SubmitButtons","ReCommentSubmit","ReCommentCancel","ListWrapper","ListWrap","CommentList","CommentContext","CommentDate","ReCommentButton","CommentButtonWrapper","UpdateButton","DeleteButton","ReCommentList","ReCommentWrap","ReCommentContext","RecommentUpdateInput","ReCommentDate","CommentPage","id","ip","date","Date","year","getFullYear","month","getMonth","toString","day","getDate","hours","getHours","slice","minutes","getMinutes","today","comment","setComment","recomment","setReComment","commentList","setCommentList","recommentList","setReCommentList","comment_idx","setComment_idx","isOpen","setIsOpen","isEdit","setIsEdit","ChangeComment","e","target","value","ChangeReComment","console","log","currentPage","setCurrentPage","pageSize","setPageSize","itemsCounts","length","lastPage","Math","ceil","offset","onPageChange","num","prevPage","prev","nextPage","SubmitComment","idx","post","context","reg_rdate","board_idx","ip_address","then","res","CommentListing","catch","err","bundle_id","CancelComment","param","URLSearchParams","append","data","filter","el","class","CommentUpdate","OpenReply","UpdateComment","update_date","comment_index","alert","CommentDelete","deleted","UpdateRecomment","RecommentUpdate","RecommentDelete","map","index","color","distinguish"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport Pagination from \"../pagination/Pagination\";\nimport {\n  Comment,\n  CommentTitle,\n  CommentLength,\n  CommentName,\n  CommentWrite,\n  CommentInput,\n  CommentSubmit,\n  ReCommentWrite,\n  ReCommentInput,\n  SubmitButtons,\n  ReCommentSubmit,\n  ReCommentCancel,\n  ListWrapper,\n  ListWrap,\n  CommentList,\n  CommentContext,\n  CommentDate,\n  ReCommentButton,\n  CommentButtonWrapper,\n  UpdateButton,\n  DeleteButton,\n  ReCommentList,\n  ReCommentWrap,\n  ReCommentContext,\n  RecommentUpdateInput,\n  ReCommentDate,\n} from \"./Comment.styles\";\n\nfunction CommentPage({ id, ip }) {\n  let date = new Date();\n  let year = date.getFullYear();\n  let month = date.getMonth() + 1;\n  month = month < 10 ? \"0\" + month.toString() : month.toString();\n  let day = date.getDate();\n  day = day < 10 ? \"0\" + month.toString() : day.toString();\n  let hours = (\"0\" + date.getHours()).slice(-2);\n  let minutes = (\"0\" + date.getMinutes()).slice(-2);\n\n  const today = `${year}-${month}-${day} ${hours}.${minutes}`;\n  const [comment, setComment] = useState(\"\");\n  const [recomment, setReComment] = useState(\"\");\n  const [commentList, setCommentList] = useState([]);\n  const [recommentList, setReCommentList] = useState([]);\n  const [comment_idx, setComment_idx] = useState([]);\n\n  const [isOpen, setIsOpen] = useState(false);\n  const [isEdit, setIsEdit] = useState(false);\n\n  function ChangeComment(e) {\n    setComment(e.target.value);\n  }\n  function ChangeReComment(e) {\n    setReComment(e.target.value);\n    console.log(recomment);\n  }\n\n  // 페이지네이션\n  const [currentPage, setCurrentPage] = useState(1);\n  const [pageSize, setPageSize] = useState(10);\n  const itemsCounts = commentList.length;\n  const lastPage = Math.ceil(itemsCounts / pageSize);\n  const offset = (currentPage - 1) * pageSize;\n\n  function onPageChange(num) {\n    setCurrentPage(num);\n    console.log(num);\n  }\n  function prevPage(e) {\n    if (currentPage === 1) return;\n    setCurrentPage((prev) => prev - 1);\n    console.log(currentPage, \"prev\");\n  }\n  function nextPage(e) {\n    if (currentPage >= lastPage) return;\n    setCurrentPage((prev) => prev + 1);\n    console.log(currentPage, \"next\");\n  }\n\n  // 댓글 작성하기\n\n  async function SubmitComment(idx) {\n    console.log(idx);\n\n    isOpen === false\n      ? await axios\n          .post(\"http://localhost:8000/comment\", {\n            context: comment,\n            reg_rdate: today,\n            board_idx: id,\n            ip_address: ip,\n          })\n          .then((res) => {\n            console.log(res, \"res\");\n            CommentListing(id);\n          })\n          .catch((err) => {\n            console.log(err);\n          })\n      : await axios\n          .post(\"http://localhost:8000/recomment\", {\n            context: recomment,\n            reg_rdate: today,\n            board_idx: id,\n            bundle_id: idx,\n            ip_address: ip,\n          })\n          .then((res) => {\n            console.log(res, \"res\");\n            CommentListing(id);\n            setIsOpen(false);\n          })\n          .catch((err) => {\n            console.log(err);\n          });\n  }\n  function CancelComment() {\n    setIsOpen(false);\n    setIsEdit(false);\n    setComment(\"\");\n    setReComment(\"\");\n  }\n\n  // 댓글 불러오기\n\n  useEffect(() => {\n    CommentListing(id);\n  }, []);\n\n  async function CommentListing(id) {\n    // console.log(id, \"id\");\n    const param = new URLSearchParams();\n\n    param.append(\"board_idx\", id);\n    await axios\n      .post(\"/comment/list\", param)\n      .then((res) => {\n        // console.log(res.data, \"res_list\");\n        setCommentList(res.data.filter((el) => el.class === 0));\n        setReCommentList(res.data.filter((el) => el.class !== 0));\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    setComment(\"\");\n    setReComment(\"\");\n  }\n\n  // 수정 댓글 불러오기\n  async function CommentUpdate(idx) {\n    console.log(idx);\n    setIsEdit(true);\n    OpenReply(idx);\n    console.log(idx);\n\n    const param = new URLSearchParams();\n\n    param.append(\"comment_index\", idx);\n    await axios\n      .post(\"http://localhost:8000/comment/data\", param)\n      .then((res) => {\n        console.log(res, \"결과_댓글\");\n        setComment(res.data[0].context);\n      });\n  }\n\n  function OpenReply(idx) {\n    setComment_idx(idx);\n    setIsOpen(true);\n  }\n\n  // 댓글 수정하기\n\n  async function UpdateComment(idx) {\n    await axios\n      .post(\"http://localhost:8000/update/comment\", {\n        context: comment,\n        update_date: today,\n        comment_index: idx,\n      })\n      .then((res) => {\n        console.log(res, \"res_update\");\n        alert(\"수정 완료\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    setIsOpen(false);\n    setIsEdit(false);\n    CommentListing(id);\n  }\n\n  // 댓글 삭제하기\n  async function CommentDelete(idx) {\n    console.log(idx);\n    await axios\n      .post(\"http://localhost:8000/delete/comment\", {\n        comment_index: idx,\n        deleted: \"deleted\",\n      })\n      .then((res) => {\n        console.log(res);\n        alert(\"삭제 완료\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    CommentListing(id);\n  }\n\n  // 수정 대댓글 불러오기\n  async function UpdateRecomment(idx) {\n    console.log(idx);\n    setIsEdit(true);\n    OpenReply(idx);\n  }\n\n  // 대댓글 수정하기\n  async function RecommentUpdate(idx) {\n    console.log(idx);\n\n    await axios\n      .post(\"http://localhost:8000/update/recomment\", {\n        context: recomment,\n        update_date: today,\n        comment_index: idx,\n      })\n      .then((res) => {\n        console.log(res);\n        alert(\"수정 완료\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    setIsOpen(false);\n    setIsEdit(false);\n    CommentListing(id);\n  }\n\n  //대댓글 삭제하기\n  async function RecommentDelete(idx) {\n    console.log(idx);\n    await axios\n      .post(\"http://localhost:8000/delete/recomment\", {\n        comment_index: idx,\n        deleted: \"deleted\",\n      })\n      .then((res) => {\n        console.log(res);\n        alert(\"삭제 완료\");\n      })\n      .catch((err) => {\n        console.log(err);\n      });\n    CommentListing(id);\n  }\n\n  return (\n    <Comment>\n      {ip && (\n        <>\n          <CommentTitle>\n            <CommentLength>\n              <CommentName>댓글</CommentName>\n              <div>\n                {commentList.filter((el) => el.deleted === null).length}\n              </div>\n            </CommentLength>\n          </CommentTitle>\n          <CommentName>댓글 작성하기</CommentName>\n          <CommentWrite>\n            <CommentInput\n              value={isOpen === true ? \"\" : comment}\n              onChange={isOpen === true ? null : ChangeComment}\n            ></CommentInput>\n            <CommentSubmit onClick={SubmitComment}>작성하기</CommentSubmit>\n          </CommentWrite>\n          {commentList.slice(offset, offset + pageSize).map((el, index) => (\n            <ListWrapper>\n              <ListWrap>\n                <CommentList>\n                  <CommentContext\n                    key={el.comment_index}\n                    value={comment}\n                    style={{\n                      color: el.deleted === \"deleted\" ? \"gray\" : \"black\",\n                    }}\n                  >\n                    {el.deleted === null ? el.context : \"삭제된 댓글입니다\"}\n                  </CommentContext>\n                  <CommentDate>\n                    {el.reg_rdate.slice(0, 10) +\n                      \".\" +\n                      el.reg_rdate.slice(11, 16)}\n                  </CommentDate>\n\n                  <ReCommentButton\n                    onClick={() => OpenReply(el.comment_index, index)}\n                  >\n                    댓글 달기\n                  </ReCommentButton>\n                </CommentList>\n                {el.deleted !== \"deleted\" && el.ip_address === ip && (\n                  <CommentButtonWrapper>\n                    <UpdateButton\n                      disabled={el.distinguish === 0 ? null : \"disabled\"}\n                      onClick={() => CommentUpdate(el.comment_index)}\n                    >\n                      수정\n                    </UpdateButton>\n\n                    <DeleteButton\n                      onClick={() => CommentDelete(el.comment_index)}\n                    >\n                      삭제\n                    </DeleteButton>\n                  </CommentButtonWrapper>\n                )}\n              </ListWrap>\n              <div>\n                {recommentList.map((recomment, index) => (\n                  <>\n                    {el.comment_index === recomment.bundle_id ? (\n                      <ReCommentList key={recomment.bundle_id}>\n                        {isOpen === true &&\n                        comment_idx === recomment.comment_index ? (\n                          <>\n                            <ReCommentWrite>\n                              <RecommentUpdateInput\n                                onChange={ChangeReComment}\n                                defaultValue={recomment.context}\n                              ></RecommentUpdateInput>\n\n                              <SubmitButtons>\n                                <ReCommentSubmit\n                                  onClick={() =>\n                                    RecommentUpdate(recomment.comment_index)\n                                  }\n                                >\n                                  수정하기\n                                </ReCommentSubmit>\n                                <ReCommentCancel\n                                  onClick={() =>\n                                    CancelComment(recomment.comment_index)\n                                  }\n                                >\n                                  취소하기\n                                </ReCommentCancel>\n                              </SubmitButtons>\n                            </ReCommentWrite>\n                          </>\n                        ) : (\n                          <>\n                            <ReCommentWrap>\n                              <ReCommentContext\n                                style={{\n                                  color:\n                                    recomment.deleted === \"deleted\"\n                                      ? \"gray\"\n                                      : \"black\",\n                                }}\n                              >\n                                {recomment.deleted === null\n                                  ? \"⌙ \" + recomment.context\n                                  : \"삭제된 댓글입니다\"}\n                              </ReCommentContext>\n                              <ReCommentDate>\n                                {recomment.reg_rdate.slice(0, 10) +\n                                  \".\" +\n                                  recomment.reg_rdate.slice(11, 16)}\n                              </ReCommentDate>\n                            </ReCommentWrap>\n                            <CommentButtonWrapper>\n                              <UpdateButton\n                                disabled={\n                                  recomment.distinguish === 0\n                                    ? null\n                                    : \"disabled\"\n                                }\n                                onClick={() =>\n                                  UpdateRecomment(recomment.comment_index)\n                                }\n                              >\n                                수정\n                              </UpdateButton>\n\n                              <DeleteButton\n                                onClick={() =>\n                                  RecommentDelete(recomment.comment_index)\n                                }\n                              >\n                                삭제\n                              </DeleteButton>\n                            </CommentButtonWrapper>\n                          </>\n                        )}\n                      </ReCommentList>\n                    ) : null}\n                  </>\n                ))}\n              </div>\n              {isOpen === true && comment_idx === el.comment_index && (\n                <ReCommentWrite>\n                  <ReCommentInput\n                    onChange={isEdit === true ? ChangeComment : ChangeReComment}\n                    value={isEdit === true ? comment : recomment}\n                  ></ReCommentInput>\n                  {isEdit === true ? (\n                    <SubmitButtons>\n                      <ReCommentSubmit\n                        onClick={() => UpdateComment(el.comment_index)}\n                      >\n                        수정하기\n                      </ReCommentSubmit>\n                      <ReCommentCancel\n                        onClick={() => CancelComment(el.comment_index)}\n                      >\n                        취소하기\n                      </ReCommentCancel>\n                    </SubmitButtons>\n                  ) : (\n                    <SubmitButtons>\n                      <ReCommentSubmit\n                        onClick={() => SubmitComment(el.comment_index)}\n                      >\n                        저장하기\n                      </ReCommentSubmit>\n                      <ReCommentCancel\n                        onClick={() => CancelComment(el.comment_index)}\n                      >\n                        취소하기\n                      </ReCommentCancel>\n                    </SubmitButtons>\n                  )}\n                </ReCommentWrite>\n              )}\n            </ListWrapper>\n          ))}\n          <Pagination\n            itemsCount={itemsCounts}\n            onPageChange={onPageChange}\n            pageSize={pageSize}\n            currentPage={currentPage}\n            setCurrentPage={setCurrentPage}\n            prevPage={prevPage}\n            nextPage={nextPage}\n            lastPage={lastPage}\n          />\n        </>\n      )}\n    </Comment>\n  );\n}\nexport default CommentPage;\n"]},"metadata":{},"sourceType":"module"}